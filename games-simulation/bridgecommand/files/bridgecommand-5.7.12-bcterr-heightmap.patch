--- a/BCTerrainSceneNode.h
+++ b/BCTerrainSceneNode.h
@@ -56,8 +56,8 @@
 
 		//! Initializes the terrain data.  Loads the vertices from the heightMapFile.
 		virtual bool loadHeightMap(io::IReadFile* file,
-			video::SColor vertexColor = video::SColor ( 255, 255, 255, 255 ), s32 smoothFactor = 0,
-			bool rgbEncoded=false ) _IRR_OVERRIDE_;
+			video::SColor vertexColor, s32 smoothFactor
+			 ) _IRR_OVERRIDE_;
 
 		//! Initializes the terrain data.  Loads the vertices from the heightMapFile.
 		virtual bool loadHeightMapRAW(io::IReadFile* file, s32 bitsPerPixel = 16,
--- a/BCTerrainSceneNode.cpp
+++ b/BCTerrainSceneNode.cpp
@@ -81,7 +81,7 @@
 
 	//! Initializes the terrain data. Loads the vertices from the heightMapFile
 	bool BCTerrainSceneNode::loadHeightMap(io::IReadFile* file, video::SColor vertexColor,
-			s32 smoothFactor, bool rgbEncoded)
+			s32 smoothFactor)
 	{
 		if (!file)
 			return false;
@@ -205,7 +205,7 @@
 				vertex.Color = vertexColor;
 				vertex.Pos.X = fx;
 				//JAMES: Either use greyscale lightness, or use full RGB encoding
-				if (rgbEncoded) {
+				if (true) {
 					//Absolute height is (red * 256 + green + blue / 256) - 32768
 					video::SColor pixelColor = heightMap->getPixel(x,TerrainData.Size-z-1);
 					vertex.Pos.Y = ((f32)pixelColor.getRed()*256 + (f32)pixelColor.getGreen() + (f32)pixelColor.getBlue()/256.0)-32768.0; //JAMES: Flipped both x and z, to rotate loading by 180 degrees
